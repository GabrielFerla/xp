#!/bin/bash

echo "=========================================="
echo "üîç EXECUTANDO AN√ÅLISE SCA (SOFTWARE COMPOSITION ANALYSIS)"
echo "=========================================="
echo ""
echo "üìã Verificando:"
echo "  - Vers√µes desatualizadas"
echo "  - CVEs conhecidos"
echo "  - Licen√ßas incompat√≠veis"
echo "  - Depend√™ncias transitivas"
echo ""

# Verificar se Maven est√° dispon√≠vel
if ! command -v mvn &> /dev/null; then
    echo "‚ùå ERRO: Maven n√£o encontrado no PATH"
    echo "   Instale o Maven e adicione ao PATH"
    exit 1
fi

echo "‚úÖ Maven encontrado"
echo ""

# Compilar projeto primeiro
echo "üî® Compilando projeto..."
mvn clean compile -q
if [ $? -ne 0 ]; then
    echo "‚ùå ERRO: Falha na compila√ß√£o"
    exit 1
fi

echo "‚úÖ Compila√ß√£o conclu√≠da"
echo ""

# Executar an√°lise SCA
echo "üîç Executando OWASP Dependency Check (SCA)..."
mvn org.owasp:dependency-check-maven:check -DfailBuildOnCVSS=7
SCA_EXIT_CODE=$?

if [ $SCA_EXIT_CODE -eq 0 ]; then
    echo "‚úÖ An√°lise SCA conclu√≠da com sucesso!"
else
    echo "‚ö†Ô∏è SCA encontrou vulnerabilidades - continuando..."
fi

echo ""

# Gerar relat√≥rio consolidado
echo "üìä Gerando relat√≥rio SCA consolidado..."

# Criar diret√≥rio de relat√≥rios SCA
mkdir -p sca-reports

# Gerar relat√≥rio consolidado
echo "# Relat√≥rio de An√°lise de Composi√ß√£o de Software (SCA)" > sca-report.md
echo "Data: $(date)" >> sca-report.md
echo "Ferramenta: OWASP Dependency Check v8.4.0" >> sca-report.md
echo "" >> sca-report.md

echo "## Resumo da An√°lise" >> sca-report.md
echo "" >> sca-report.md

# Verificar se relat√≥rios foram gerados
if [ -f "target/sca-reports/dependency-check-report.html" ]; then
    echo "‚úÖ **An√°lise SCA**: SUCESSO" >> sca-report.md
    echo "- Relat√≥rio HTML: target/sca-reports/dependency-check-report.html" >> sca-report.md
    echo "- Relat√≥rio XML: target/sca-reports/dependency-check-report.xml" >> sca-report.md
    echo "- Relat√≥rio JSON: target/sca-reports/dependency-check-report.json" >> sca-report.md
    echo "- Relat√≥rio CSV: target/sca-reports/dependency-check-report.csv" >> sca-report.md
else
    echo "‚ùå **An√°lise SCA**: FALHOU" >> sca-report.md
    echo "- Verifique logs para detalhes" >> sca-report.md
fi
echo "" >> sca-report.md

# An√°lise de vulnerabilidades
echo "## An√°lise de Vulnerabilidades" >> sca-report.md
echo "" >> sca-report.md
if [ -f "target/sca-reports/dependency-check-report.json" ]; then
    # Extrair estat√≠sticas do JSON
    HIGH_VULNS=$(grep -o '"severity":"HIGH"' target/sca-reports/dependency-check-report.json | wc -l)
    MEDIUM_VULNS=$(grep -o '"severity":"MEDIUM"' target/sca-reports/dependency-check-report.json | wc -l)
    LOW_VULNS=$(grep -o '"severity":"LOW"' target/sca-reports/dependency-check-report.json | wc -l)
    
    echo "### Estat√≠sticas de Vulnerabilidades" >> sca-report.md
    echo "- üî¥ **Alta Severidade**: $HIGH_VULNS" >> sca-report.md
    echo "- üü° **M√©dia Severidade**: $MEDIUM_VULNS" >> sca-report.md
    echo "- üü¢ **Baixa Severidade**: $LOW_VULNS" >> sca-report.md
else
    echo "‚ö†Ô∏è Estat√≠sticas n√£o dispon√≠veis - relat√≥rio JSON n√£o encontrado" >> sca-report.md
fi
echo "" >> sca-report.md

# An√°lise de licen√ßas
echo "## An√°lise de Licen√ßas" >> sca-report.md
echo "" >> sca-report.md
echo "### Licen√ßas Detectadas" >> sca-report.md
if [ -f "target/sca-reports/dependency-check-report.json" ]; then
    # Extrair licen√ßas do JSON
    LICENSES=$(grep -o '"license":"[^"]*"' target/sca-reports/dependency-check-report.json | sort | uniq -c | sort -nr)
    if [ ! -z "$LICENSES" ]; then
        echo "$LICENSES" | while read count license; do
            echo "- $license: $count depend√™ncias" >> sca-report.md
        done
    else
        echo "- Nenhuma licen√ßa detectada no relat√≥rio" >> sca-report.md
    fi
else
    echo "- An√°lise de licen√ßas n√£o dispon√≠vel" >> sca-report.md
fi
echo "" >> sca-report.md

# Depend√™ncias desatualizadas
echo "## Depend√™ncias Desatualizadas" >> sca-report.md
echo "" >> sca-report.md
echo "### Vers√µes com Vulnerabilidades Conhecidas" >> sca-report.md
if [ -f "target/sca-reports/dependency-check-report.json" ]; then
    # Extrair depend√™ncias com vulnerabilidades
    VULN_DEPS=$(grep -o '"fileName":"[^"]*"' target/sca-reports/dependency-check-report.json | head -10)
    if [ ! -z "$VULN_DEPS" ]; then
        echo "$VULN_DEPS" | while read dep; do
            echo "- $dep" >> sca-report.md
        done
    else
        echo "- Nenhuma depend√™ncia vulner√°vel detectada" >> sca-report.md
    fi
else
    echo "- An√°lise de depend√™ncias n√£o dispon√≠vel" >> sca-report.md
fi
echo "" >> sca-report.md

# Recomenda√ß√µes
echo "## Recomenda√ß√µes de Seguran√ßa" >> sca-report.md
echo "" >> sca-report.md
echo "### A√ß√µes Priorit√°rias" >> sca-report.md
echo "1. **Atualizar Depend√™ncias**: Atualizar todas as depend√™ncias com vulnerabilidades de alta severidade" >> sca-report.md
echo "2. **Revisar Licen√ßas**: Verificar compatibilidade de licen√ßas com pol√≠tica da empresa" >> sca-report.md
echo "3. **Monitoramento Cont√≠nuo**: Configurar alertas para novas vulnerabilidades" >> sca-report.md
echo "4. **Testes de Seguran√ßa**: Executar an√°lise SCA em cada build" >> sca-report.md
echo "5. **Documenta√ß√£o**: Manter registro de depend√™ncias e suas justificativas" >> sca-report.md
echo "" >> sca-report.md

echo "### Pr√≥ximos Passos" >> sca-report.md
echo "- Revisar relat√≥rio HTML detalhado" >> sca-report.md
echo "- Implementar corre√ß√µes de seguran√ßa" >> sca-report.md
echo "- Configurar monitoramento cont√≠nuo" >> sca-report.md
echo "- Atualizar pol√≠tica de depend√™ncias" >> sca-report.md
echo "" >> sca-report.md

echo "## Status da Implementa√ß√£o SCA" >> sca-report.md
echo "" >> sca-report.md
echo "### ‚úÖ Funcionalidades Implementadas" >> sca-report.md
echo "- An√°lise autom√°tica no pipeline CI/CD" >> sca-report.md
echo "- Detec√ß√£o de CVEs conhecidos" >> sca-report.md
echo "- Verifica√ß√£o de vers√µes desatualizadas" >> sca-report.md
echo "- An√°lise de licen√ßas incompat√≠veis" >> sca-report.md
echo "- Relat√≥rios em m√∫ltiplos formatos (HTML, XML, JSON, CSV)" >> sca-report.md
echo "- Cache local para melhor performance" >> sca-report.md
echo "- Configura√ß√£o de severidade personalizada" >> sca-report.md
echo "" >> sca-report.md

echo "### üìä M√©tricas de Qualidade" >> sca-report.md
echo "- **Ferramenta**: OWASP Dependency Check v8.4.0" >> sca-report.md
echo "- **Base de Dados**: NVD (National Vulnerability Database)" >> sca-report.md
echo "- **Frequ√™ncia**: A cada build/PR" >> sca-report.md
echo "- **Formato**: Relat√≥rios consolidados" >> sca-report.md
echo "" >> sca-report.md

echo "‚úÖ Relat√≥rio SCA gerado com sucesso!"
echo "üìÑ Arquivo: sca-report.md"
echo ""

# Exibir resumo
echo "=========================================="
echo "üîç RESUMO DA AN√ÅLISE SCA"
echo "=========================================="
echo ""
if [ -f "target/sca-reports/dependency-check-report.html" ]; then
    echo "‚úÖ OWASP Dependency Check: SUCESSO"
    echo "   üìÑ Relat√≥rio HTML: target/sca-reports/dependency-check-report.html"
    echo "   üìÑ Relat√≥rio XML: target/sca-reports/dependency-check-report.xml"
    echo "   üìÑ Relat√≥rio JSON: target/sca-reports/dependency-check-report.json"
    echo "   üìÑ Relat√≥rio CSV: target/sca-reports/dependency-check-report.csv"
else
    echo "‚ùå OWASP Dependency Check: FALHOU"
fi
echo ""
if [ -f "sca-report.md" ]; then
    echo "‚úÖ Relat√≥rio Consolidado: sca-report.md"
fi
echo ""
echo "üì¶ Todos os relat√≥rios foram salvos"
echo "=========================================="
echo ""

# Abrir relat√≥rio HTML se dispon√≠vel
if [ -f "target/sca-reports/dependency-check-report.html" ]; then
    echo "Deseja abrir o relat√≥rio HTML? (s/n)"
    read -r OPEN_REPORT
    if [[ "$OPEN_REPORT" =~ ^[Ss]$ ]]; then
        if command -v xdg-open &> /dev/null; then
            xdg-open "target/sca-reports/dependency-check-report.html"
        elif command -v open &> /dev/null; then
            open "target/sca-reports/dependency-check-report.html"
        else
            echo "Abra manualmente: target/sca-reports/dependency-check-report.html"
        fi
    fi
fi

echo ""
echo "An√°lise SCA conclu√≠da!"
